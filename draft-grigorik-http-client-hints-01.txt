


Network Working Group                                        I. Grigorik
Internet-Draft                                          October 27, 2013
Intended status: Informational
Expires: April 30, 2014


                           HTTP Client Hints
                  draft-grigorik-http-client-hints-01

Abstract

   An increasing diversity of connected device form factors and software
   capabilities has created a need to deliver varying, or optimized
   content for each device.

   Client Hints can be used as input to proactive content negotiation;
   just as the Accept header allowed clients to indicate what formats
   they prefer, Client Hints allow clients to indicate a list of device
   and agent specific preferences.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on April 30, 2014.

Copyright Notice

   Copyright (c) 2013 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must



Grigorik                 Expires April 30, 2014                 [Page 1]

Internet-Draft              HTTP Client Hints               October 2013


   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Notational Conventions . . . . . . . . . . . . . . . . . .  3
   2.  The Client Hint Request Header Fields  . . . . . . . . . . . .  3
     2.1.  Hint Value Syntax  . . . . . . . . . . . . . . . . . . . .  4
     2.2.  Predefined Hints . . . . . . . . . . . . . . . . . . . . .  4
       2.2.1.  CH-DPR . . . . . . . . . . . . . . . . . . . . . . . .  5
       2.2.2.  CH-DW  . . . . . . . . . . . . . . . . . . . . . . . .  5
     2.3.  Server Selection Confirmation  . . . . . . . . . . . . . .  5
       2.3.1.  DPR  . . . . . . . . . . . . . . . . . . . . . . . . .  5
     2.4.  Examples . . . . . . . . . . . . . . . . . . . . . . . . .  6
     2.5.  Opt-in mechanism . . . . . . . . . . . . . . . . . . . . .  6
     2.6.  Interaction with Caches  . . . . . . . . . . . . . . . . .  7
     2.7.  Relationship to the User-Agent Request Header  . . . . . .  7
   3.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  7
     3.1.  The Client Hints Request Header Field  . . . . . . . . . .  8
     3.2.  The HTTP Hints . . . . . . . . . . . . . . . . . . . . . .  8
     3.3.  The HTTP Client Hints Registry . . . . . . . . . . . . . .  8
   4.  Security Considerations  . . . . . . . . . . . . . . . . . . .  9
   5.  Normative References . . . . . . . . . . . . . . . . . . . . .  9
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 10
























Grigorik                 Expires April 30, 2014                 [Page 2]

Internet-Draft              HTTP Client Hints               October 2013


1.  Introduction

   There are thousands of different devices accessing the web, each with
   different device capabilities and preference information.  These
   device capabilities include hardware and software characteristics, as
   well as dynamic user and client preferences.

   One way to infer some of these capabilities is through User-Agent
   (UA) detection against an established database of client signatures.
   However, this technique requires acquiring such a database,
   integrating it into the serving path, and keeping it up to date.
   However, even once this infrastructure is deployed, UA sniffing has
   numerous limitations:

   o  UA detection cannot reliably identify all static variables
   o  UA detection cannot infer any dynamic client preferences
   o  UA detection requires an external device database
   o  UA detection is not cache friendly

   A popular alternative strategy is to use HTTP cookies to communicate
   some information about the client.  However, this approach is also
   not cache friendly, bound by same origin policy, and imposes
   additional client-side latency by requiring JavaScript execution to
   create and manage HTTP cookies.

   This document defines a set of new request Client Hint header fields
   that allow the client to perform proactive content negotiation
   [I-D.ietf-httpbis-p2-semantics] by indicating a list of device and
   agent specific preferences, through a mechanism similar to the Accept
   header which is used to indicate preferred response formats.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   This document uses the Augmented Backus-Naur Form (ABNF) notation of
   [RFC5234] with the list rule extension defined in
   [I-D.ietf-httpbis-p1-messaging], Appendix B.  It includes by
   reference the OWS, field-name and quoted-string rules from that
   document, and the parameter rule from
   [I-D.ietf-httpbis-p2-semantics].


2.  The Client Hint Request Header Fields

   Each Client Hint request header field describes an example list of



Grigorik                 Expires April 30, 2014                 [Page 3]

Internet-Draft              HTTP Client Hints               October 2013


   client preferences that the server can use to adapt and optimize the
   resource to satisfy a given request.  The field-name of the hint
   consists of a "CH-" prefix and hint type and is case insensitive.
   The field-value consists of token, or comma-delimited list of
   parameters.

     #client-hint-name = #client-hint-value
     client-hint-name = "CH-" token
     client-hint-value = token | 1#parameter

2.1.  Hint Value Syntax

   Hints header fields are allowed to be defined as a single boolean or
   numeric value, or as a list of header fields with the same types.
   Where possible, single boolean (i.e. as a flag) or numeric value
   should be used, so that the hint's don't consume too much space in
   client requests.

   When a single numeric or boolean value is used, the hint value is the
   full field value.  When a list of hints is used, the hint values are
   the comma-separated values within the field value.

   Hint values can be defined as one of two types:

   o  Boolean - indicated by the presence of the hint name.  If the hint
      name is absent in the last message containing the client hint
      header field, it is considered false.
   o  Numeric - value indicated by the full field-value contents (single
      value), or by the digits after "=" of the hint name (parameter
      value), up to the first non-digit character.  If the hint does not
      have an argument, its value is assumed to be 0.

   Note that HTTP/1.1 allows headers with comma-separated values to be
   conveyed using multiple instances of the same header; as a result,
   the hints are collected from all instances of the same header on the
   message in question before being considered complete.  If the same
   hint is used more than once, then the last hint overrides all
   previous occurrences, and the final ordering of unique hints is not
   significant.

2.2.  Predefined Hints

   The client controls which Client Hint headers and their respective
   header fields are communicated, based on its default settings, or
   based on user configuration and preferences.  The user may be given
   the choice to enable, disable, or override specific hints.

   The client and server, or an intermediate proxy, may use an opt-in



Grigorik                 Expires April 30, 2014                 [Page 4]

Internet-Draft              HTTP Client Hints               October 2013


   mechanism to negotiate which fields should be reported to allow for
   efficient content adaption.

   This document defines the following hints:

2.2.1.  CH-DPR

   o  Description: Device Pixel Ratio (DPR), is the ratio between
      physical pixels and density independent pixels on the device.
   o  Value Type: number

2.2.2.  CH-DW

   o  Description: display width of the requested resource in density
      independent pixels on the device.
   o  Value Type: number

2.3.  Server Selection Confirmation

   The server may decide to use provided client hint information to
   select an alternate resource.  When the server performs such
   selection, and if the choice may affect how the resource should be
   processed on the client, then it must confirm the selection and
   indicate the value of selected resource via corresponding response
   header.

   This document defines the following confirmation headers:

2.3.1.  DPR

   o  Description: ratio between physical pixels and density independent
      pixels of the selected asset.
   o  Value Type: number

   DPR ratio affects the calculation of intrinsic size of the image on
   the client (i.e. typically, the client automatically scales the
   natural size of the image by the DPR ratio to derive its display
   dimensions).  As a result, the server must explicitly indicate the
   DPR of the asset whenever CH-DPR hint is used, and the client must
   use the DPR value returned by the server to perform its calculations.
   In case the server returned DPR value contradicts previous client-
   side DPR indication (e.g. srcN's x-viewport), the server returned
   value must take precedence.

   The server does not need to confirm display width selection as this
   value can be derived from the asset itself once it is decoded by the
   client.




Grigorik                 Expires April 30, 2014                 [Page 5]

Internet-Draft              HTTP Client Hints               October 2013


2.4.  Examples

   For example, given the following request header:

     CH-DPR: 2.0
     CH-DW: 160

   The server knows that the device pixel ratio is 2.0, and that the
   intended display width of requested resource is 160px, as measured by
   density independent pixels on the device.

   If the server uses above hints to perform resource selection, it must
   confirm its selection via the DPR response header to allow the client
   to calculate the appropriate intrinsic size of the image asset.  The
   server does not need to confirm display width, only the ratio between
   physical pixels and density independent pixels of the selected image
   asset:

     DPR: 1.0

   The DPR response header indicates to the client that the server has
   selected an asset with DPR ratio of 1.0.  The client may use this
   information to perform additional processing on the resource - for
   example, calculate the appropriate intrinsic size of the image asset
   such that it is displayed at the correct resolution.

2.5.  Opt-in mechanism

   CH is an optional header which may be sent by the client when making
   a request to the server.  The client may decide to always send the
   header, or use an opt-in mechanism, such as a predefined or user
   specified list of origins, remembered site preference based on past
   navigation history, or any other forms of opt-in.

   For example, the server may advertise its support via Accept-CH
   header or an equivalent HTML meta element with http-equiv attribute:

     Accept-CH: DPR, DW

   When the client receives the opt-in signal indicating support for
   Client Hint adaptation, it should append the Client Hint headers that
   match the advertised field-values.  For example, based on Accept-CH
   example above, the client may append CH-DPR and CH-DW headers to
   subsequent requests.







Grigorik                 Expires April 30, 2014                 [Page 6]

Internet-Draft              HTTP Client Hints               October 2013


2.6.  Interaction with Caches

   Client Hints may be combined with Key ([I-D.fielding-http-key]) to
   enable fine-grained control of the cache key for improved cache
   efficiency.  For example, the server may return the following set of
   instructions:

     Key: CH-DPR;r=[1.5:]

   Above examples indicates that the cache key should be based on the
   CH-DPR header, and the asset should be cached and made available for
   any client whose device pixel ratio is 1.5, or higher.

     Key: CH-DW;r=[320:640]

   Above example indicates that the cache key should be based on the
   CH-DW header, and the asset should be cached and made available for
   any asset whose display width falls between 320 and 640px.

   In absence of support for fine-grained control of the cache key via
   the Key header field, Vary response header can be used to indicate
   that served resource has been adapted based on specified Client Hint
   preferences.

     Vary: CH-DPR

   Above example indicates that the cache key should be based on the CH-
   DPR header.

     Vary: CH-DPR, CH-DW

   Above example indicates that the cache key should be based on the CH-
   DPR and CH-DW headers.

2.7.  Relationship to the User-Agent Request Header

   Client Hints does not supersede or replace User-Agent.  Existing
   device detection mechanisms can continue to use both mechanisms if
   necessary.  By advertising its capabilities within a request header,
   Client Hints allows for cache friendly and proactive content
   negotiation.


3.  IANA Considerations







Grigorik                 Expires April 30, 2014                 [Page 7]

Internet-Draft              HTTP Client Hints               October 2013


3.1.  The Client Hints Request Header Field

   This document defines the "CH-DPR", "CH-DW", and "DPR" HTTP request
   fields, and registers it in the Permanent Message Headers registry.

   o  Header field name: CH-DPR
   o  Applicable protocol: HTTP
   o  Status: Informational
   o  Author/Change controller: Ilya Grigorik, ilya@igvita.com
   o  Specification document(s): [this document]
   o  Related information: for Client Hints
   o  Header field name: CH-DW
   o  Applicable protocol: HTTP
   o  Status: Informational
   o  Author/Change controller: Ilya Grigorik, ilya@igvita.com
   o  Specification document(s): [this document]
   o  Related information: for Client Hints
   o  Header field name: DPR
   o  Applicable protocol: HTTP
   o  Status: Informational
   o  Author/Change controller: Ilya Grigorik, ilya@igvita.com
   o  Specification document(s): [this document]
   o  Related information: for Client Hints

3.2.  The HTTP Hints

   This document registers the "ch" HTTP Hint
   ([I-D.nottingham-http-browser-hints]), as defined in section 2.1:

   o  Hint Name: ch
   o  Hint Type: origin, hop
   o  Description: When present, this hint indicates support for Client-
      Hints adaptation.
   o  Value Type: numeric
   o  Contact: ilya@igvita.com
   o  Specification: this document

3.3.  The HTTP Client Hints Registry

   This document establishes the HTTP Client Hints Registry.

   New hints are registered using Expert Review (see [RFC5226]), by
   sending e-mail to iana@iana.org (or using other mechanisms, as
   established by IANA).

   New hints are expected to be implemented in at least one client in
   common use.  The Expert MAY use their judgment in determining what
   "common" is, and when something is considered to be implemented.



Grigorik                 Expires April 30, 2014                 [Page 8]

Internet-Draft              HTTP Client Hints               October 2013


   New hints MUST be optional; they cannot place requirements upon
   implementations.  Specifically, new hints MUST NOT make communication
   non-conformant with HTTP itself; i.e., this is not a mechanism for
   changing the HTTP protocol in incompatible ways.

   See section 2.1 for constraints on the syntax of hint names and hint
   values.

   Registration requests MUST use the following template:

   o  Hint Name: [name of hint]
   o  Hint Value: ["boolean" or "numeric"]
   o  Description: [description of hint]
   o  Contact: [e-mail address(es)]
   o  Specification: [optional; reference or URI to more info]
   o  Notes: [optional]

   The initial contents of the registry are defined in section 2.2.


4.  Security Considerations

   The client controls which header fields are communicated and when.
   In cases such as incognito or anonymous profile browsing, the header
   can be omitted if necessary.


5.  Normative References

   [I-D.fielding-http-key]
              Fielding, R. and M. Nottingham, "The Key HTTP Response
              Header Field", draft-fielding-http-key-02 (work in
              progress), February 2013.

   [I-D.ietf-httpbis-p1-messaging]
              Fielding, R. and J. Reschke, "Hypertext Transfer Protocol
              (HTTP/1.1): Message Syntax and Routing",
              draft-ietf-httpbis-p1-messaging-24 (work in progress),
              September 2013.

   [I-D.ietf-httpbis-p2-semantics]
              Fielding, R. and J. Reschke, "Hypertext Transfer Protocol
              (HTTP/1.1): Semantics and Content",
              draft-ietf-httpbis-p2-semantics-24 (work in progress),
              September 2013.

   [I-D.nottingham-http-browser-hints]
              Nottingham, M., "HTTP Origin and Hop Hints",



Grigorik                 Expires April 30, 2014                 [Page 9]

Internet-Draft              HTTP Client Hints               October 2013


              draft-nottingham-http-browser-hints-05 (work in progress),
              February 2013.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC5226]  Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", BCP 26, RFC 5226,
              May 2008.

   [RFC5234]  Crocker, D. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234, January 2008.


Author's Address

   Ilya Grigorik

   Email: ilya@igvita.com
   URI:   http://www.igvita.com/































Grigorik                 Expires April 30, 2014                [Page 10]


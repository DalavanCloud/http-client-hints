


Network Working Group                                        I. Grigorik
Internet-Draft                                          December 6, 2012
Intended status: Informational
Expires: June 9, 2013


                           HTTP Client Hints
                  draft-grigorik-http-client-hints-00

Abstract

   An increasing diversity of connected device form factors and software
   capabilities has created a need to deliver varying, or optimized
   content for each device.

   The 'Client-Hints' header field for HTTP requests allows the client
   to describe its preferences and capabilities to an origin server to
   enable cache-friendly, server-side content adaptation, without
   imposing additional latency and deferred evaluation on the client.

   Client-Hints also has the advantage of being able to transmit dynamic
   client preferences, such as available bandwidth, or current viewport
   size, which cannot be inferred through static client signature
   databases.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on June 9, 2013.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal



Grigorik                  Expires June 9, 2013                  [Page 1]

Internet-Draft              HTTP Client Hints              December 2012


   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 3
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . . . 3
   2.  The "Client-Hints" Request Header Field . . . . . . . . . . . . 3
     2.1.  Pre-defined Client Hints  . . . . . . . . . . . . . . . . . 4
       2.1.1.  bw  . . . . . . . . . . . . . . . . . . . . . . . . . . 4
       2.1.2.  vv  . . . . . . . . . . . . . . . . . . . . . . . . . . 4
       2.1.3.  dpr . . . . . . . . . . . . . . . . . . . . . . . . . . 4
       2.1.4.  dc  . . . . . . . . . . . . . . . . . . . . . . . . . . 4
     2.2.  Interaction with HTTP proxies . . . . . . . . . . . . . . . 5
     2.3.  Interaction with Browser Hints  . . . . . . . . . . . . . . 5
     2.4.  Interaction with User Agent . . . . . . . . . . . . . . . . 6
   3.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 6
   4.  Security Considerations . . . . . . . . . . . . . . . . . . . . 6
   5.  Normative References  . . . . . . . . . . . . . . . . . . . . . 6
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . . . 7
























Grigorik                  Expires June 9, 2013                  [Page 2]

Internet-Draft              HTTP Client Hints              December 2012


1.  Introduction

   There are thousands of different devices accessing the web, each with
   different device capabilities and preference information.  These
   device capabilities include hardware and software characteristics, as
   well as information about the state of the network to which the
   device is connected to.

   One way to infer some of these capabilities is through User-Agent
   detection against an established database of client signatures.
   However, this technique requires acquiring such a database, keeping
   it up to date, and in many cases is simply not sufficient to
   distinguish the various devices with the same fingerprint.  User-
   Agent detection is:

   o  Offers unreliable device detection
   o  Depends on acquiruing and maitenance of external databases
   o  Not cache friendly, as it is not practical to Vary on User-Agent,
      and provides no fine-grained control to Vary content based on
      device capabilities or prefernces
   o  Unable to infer dynamic client preferences, such as current
      network conditions, or user-specified preferences (ex, decisions
      made while roaming)

   This document defines a new request header field, "Client-Hints",
   that allows the client to make available hints for servers about its
   preference or capabilities, to allow server-side content adaption
   without impossing additional latency on the client, or requiring the
   use of additional device databases.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   This document uses the Augmented Backus-Naur Form (ABNF) notation of
   [RFC5234] with the list rule extension defined in
   [I-D.ietf-httpbis-p1-messaging], Appendix B.  It includes by
   reference the OWS, field-name and quoted-string rules from that
   document, and the parameter rule from
   [I-D.ietf-httpbis-p2-semantics].


2.  The "Client-Hints" Request Header Field

   The "Client-Hints" request header field describes the current client
   preferences that the server can use to adapt and optimize the



Grigorik                  Expires June 9, 2013                  [Page 3]

Internet-Draft              HTTP Client Hints              December 2012


   resource to satisfy a given request.

   The Client-Hints field-value is a comma-delimited list of well-
   defined header fields, delimited by semicolons.  Both the field-name
   and modifier names themselves are case insensitive.

2.1.  Pre-defined Client Hints

   All communicated client hints are available within the browser, such
   that content adaption could be done both on the client, and on the
   server.  As such, Client-Hints do not define any new client
   information that is not already available within the browser.

   This document defines the following hints:

2.1.1.  bw

   o  Description: Bandwidth (bw) of the current client connection, in
      kbps.
   o  Value Type: number

2.1.2.  vv

   o  Description: Visual Viewport (vv) size of the client, in CSS
      pixels (ex, 720x1024).
   o  Value Type: string

2.1.3.  dpr

   o  Description: Device Pixel Ratio (dpr), is the ratio between
      physical pixels and device-independent pixels on the device.
   o  Value Type: number

2.1.4.  dc

   o  Description: Device Capabilities (dc), is a bit-packed signature
      of enabled client features to assist with content adaptation based
      on common device class attributes.  There are hundreds of

   The dc value is the integer value of the bitfield, with the following
   indexes:

   1.  CSS Level 1 or does not support cascading (minimal CSS support)
   2.  CSS Level 2.1 with 50%+ on ACID2 test (limited CSS support)
   3.  CSS Level 2.1 with 75%+ on ACID2 test (good CSS support)
   4.  CSS Level 3 with 75%+ on ACID3 test (excellent CSS support)





Grigorik                  Expires June 9, 2013                  [Page 4]

Internet-Draft              HTTP Client Hints              December 2012


   5.  JavaScript support
   6.  XMLHttpRequest support
   7.  Touch screen device and support for touch
   8.  WebP support (maybe?)

   ...  (TBD: more?)

   Each bit should be marked as 1 if the client meets the criteria.  For
   example, for a device which supports all of the above criteria, the
   bitmap is "11111111", which is equivalent to dc=255.  For a device,
   which supports JavaScript and has good CSS support, but does not
   support XMLHttpRequest, touch, or WebP the bitmap is "00010111",
   which is equivalen tto dc=23.

   // (Ilya) the downside to this approach is that we're hardcoding
   these values into the spec, and they _will_ get out of sync.  It
   would better if we could define a layer of indirection here, which
   would allow us to be more feature proof.  For example: simply define
   class A,B,C,D,E (5 out to be enough ;-)), and pull out the definition
   of each into a separate (external) mechanism, such that as devices
   evolve, we can reclaim or upgrade what each class defines.

   (WIP) References for common attributes and device clases: -
   http://jquerymobile.com/gbs/ - http://oreilly.com/iphone/excerpts/
   iphone-mobile-design-development/mobile-web-development.html - https:
   //docs.google.com/presentation/d/
   1y_A6VOZy9bD2i0VLHv9ZWr0W3hZJvlTNCDA0itjI0yM/
   edit#slide=id.g331d4cda_0_92

2.2.  Interaction with HTTP proxies

   Client Hints are designed to optimize interaction with existing cache
   and proxy servers.

   When a resource is optimized based on the specified Client Hint
   information, a Vary response header can be specified for upstream
   cache and proxy servers.  For fine-grained control, the Key response
   header could be used to define a custom cache key based on an
   individual or a combination of client hint values.

   Unlike the User-Agent string, which is a sinle opaque string, Client
   Hints provides a stable, customizable, cache friendly mechanism for
   content adaptation.

2.3.  Interaction with Browser Hints

   Browser Hints specifies a mechanism whereby origin servers can make
   available hints for browsers (clients) about their preferences and



Grigorik                  Expires June 9, 2013                  [Page 5]

Internet-Draft              HTTP Client Hints              December 2012


   capabilities, without imposing overhead on their interactions or
   requiring support for them.

   Through the use of Browser Hints, the server can advertise the
   support for specific Client Hint variables or capabilities, allowing
   the client to avoid sending variables which will have no effect on
   the server.

2.4.  Interaction with User Agent

   Client Hints does not superseed or replace User Agent in any way.
   Existing device detection mechanisms can continue to use both
   mechanisms if necessary.

   By advertising its capabilities within a request header, Client Hints
   allows for cache friendly, and explicit content adaptation.


3.  IANA Considerations

   TBD


4.  Security Considerations

   Client Hints does not provide any additional data about the browser,
   or the user, that is currently not available within the browser
   itself.  In cases such as incognito or anonymous profile browsing,
   the header can be omitted entirely if necessary.

   Similarly, the user may be given the choice to enable, disable, or
   override specific hints.  For example, to allow the request for low-
   resolution images and other content while roaming on a foreign
   network.


5.  Normative References

   [I-D.ietf-httpbis-p1-messaging]
              Fielding, R. and J. Reschke, "Hypertext Transfer Protocol
              (HTTP/1.1): Message Syntax and Routing",
              draft-ietf-httpbis-p1-messaging-21 (work in progress),
              October 2012.

   [I-D.ietf-httpbis-p2-semantics]
              Fielding, R. and J. Reschke, "Hypertext Transfer Protocol
              (HTTP/1.1): Semantics and Content",
              draft-ietf-httpbis-p2-semantics-21 (work in progress),



Grigorik                  Expires June 9, 2013                  [Page 6]

Internet-Draft              HTTP Client Hints              December 2012


              October 2012.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC5234]  Crocker, D. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234, January 2008.


Author's Address

   Ilya Grigorik

   Email: ilya@igvita.com
   URI:   http://www.igvita.com/




































Grigorik                  Expires June 9, 2013                  [Page 7]


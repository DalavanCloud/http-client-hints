


Network Working Group                                        I. Grigorik
Internet-Draft                                         February 15, 2013
Intended status: Informational
Expires: August 19, 2013


                           HTTP Client Hints
                  draft-grigorik-http-client-hints-00

Abstract

   An increasing diversity of connected device form factors and software
   capabilities has created a need to deliver varying, or optimized
   content for each device.

   The 'CH' header field for HTTP requests allows the client to describe
   its preferences and capabilities to an origin or an intermediary
   server to enable cache-friendly, server-side content adaptation,
   without imposing additional latency and deferred evaluation on the
   client.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 19, 2013.

Copyright Notice

   Copyright (c) 2013 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect



Grigorik                 Expires August 19, 2013                [Page 1]

Internet-Draft              HTTP Client Hints              February 2013


   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 3
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . . . 3
   2.  The "Client-Hints" Request Header Field . . . . . . . . . . . . 4
     2.1.  CH Header Fields  . . . . . . . . . . . . . . . . . . . . . 4
       2.1.1.  dh  . . . . . . . . . . . . . . . . . . . . . . . . . . 4
       2.1.2.  dw  . . . . . . . . . . . . . . . . . . . . . . . . . . 4
       2.1.3.  dpr . . . . . . . . . . . . . . . . . . . . . . . . . . 4
     2.2.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . 4
     2.3.  Server opt-in with Hop and Origin Hints . . . . . . . . . . 5
     2.4.  Interaction with Key  . . . . . . . . . . . . . . . . . . . 5
     2.5.  Interaction with HTTP proxies . . . . . . . . . . . . . . . 5
     2.6.  Interaction with User Agent . . . . . . . . . . . . . . . . 6
   3.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 6
   4.  Security Considerations . . . . . . . . . . . . . . . . . . . . 6
   5.  Normative References  . . . . . . . . . . . . . . . . . . . . . 6
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . . . 6



























Grigorik                 Expires August 19, 2013                [Page 2]

Internet-Draft              HTTP Client Hints              February 2013


1.  Introduction

   There are thousands of different devices accessing the web, each with
   different device capabilities and preference information.  These
   device capabilities include hardware and software characteristics, as
   well as dynamic user and client preferences.

   One way to infer some of these capabilities is through User-Agent
   (UA) detection against an established database of client signatures.
   However, this technique requires acquiring such a database,
   integrating it into the serving path, and keeping it up to date.
   However, even once this infrastructure is deployed, UA sniffing has
   the following limitations:

   o  UA detection depends on acquiring and maintenance of external
      databases
   o  UA detection cannot reliably identify all static variables
   o  UA detection cannot infer any dynamic client preferences
   o  UA detection is not cache friendly

   A popular alternative strategy is to use HTTP cookies to communicate
   some information about the client.  However, this approach is also
   not cache friendly, bound by same origin policy, and imposes
   additional client-side latency by requiring JavaScript execution to
   create and manage HTTP cookies.

   This document defines a new request Client Hint header field, "CH",
   that allows the client to make available hints, both static and
   dynamic, to origin and intermediate servers about its preference and
   capabilities.  "CH" allows server-side content adaption without
   imposing additional latency on the client, requiring the use of
   additional device databases, while allowing cache-friendly
   deployments.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   This document uses the Augmented Backus-Naur Form (ABNF) notation of
   [RFC5234] with the list rule extension defined in
   [I-D.ietf-httpbis-p1-messaging], Appendix B.  It includes by
   reference the OWS, field-name and quoted-string rules from that
   document, and the parameter rule from
   [I-D.ietf-httpbis-p2-semantics].





Grigorik                 Expires August 19, 2013                [Page 3]

Internet-Draft              HTTP Client Hints              February 2013


2.  The "Client-Hints" Request Header Field

   The "CH" request header field describes an example list of client
   preferences that the server can use to adapt and optimize the
   resource to satisfy a given request.  The CH field-value is a comma-
   delimited list of header fields, and the field-name values are case
   insensitive.

2.1.  CH Header Fields

   The client controls which header fields are communicated within the
   CH header, based on its default settings, or based on user
   configuration and preferences.  The user may be given the choice to
   enable, disable, or override specific hints.  For example, to allow
   the request for low-resolution images or other content type's while
   roaming on a foreign network, even while on a high-bandwidth link.

   The client and server, or an intermediate proxy, may use an
   additional mechanism to negotiate which fields should be reported to
   allow for efficient content adaption.

   This document defines the following well-known hint names:

2.1.1.  dh

   o  Description: Device height (dh) of the client, in physical pixels.
   o  Value Type: number

2.1.2.  dw

   o  Description: Device width (dw) of the client, in physical pixels.
   o  Value Type: number

2.1.3.  dpr

   o  Description: Device Pixel Ratio (dpr), is the ratio between
      physical pixels and device-independent pixels on the device.
   o  Value Type: number

   Other client hints may be communicated by the client.  The decision
   as to which specific hints will be communicated is always made by the
   client.

2.2.  Examples

   For example, given the following request header:

     CH: dh=1280, dw=768, dpr=2.0



Grigorik                 Expires August 19, 2013                [Page 4]

Internet-Draft              HTTP Client Hints              February 2013


   The server knows that the clients physical screen size is 1280x768px,
   and that the device pixel ratio is 2.0.

2.3.  Server opt-in with Hop and Origin Hints

   CH is an optional header which may be sent by the client when making
   a request to the server.  The client may decide to always send the
   header, or use an optional opt-in mechanism, such as a predefined
   list of origins, user specified list of origins, or any other forms
   of opt-in.

   For example, the server may advertise its support for Client Hints
   via Hop or Origin Hint:

     HH: ch
     OH: ch

   When a client receives the Hop or Origin Hint header indicating
   support for Client Hint adaptation, it should append the CH header to
   subsequent requests to the same origin server.  Further, the client
   may remember this hint and automatically append the CH header for all
   future requests to the same origin.

2.4.  Interaction with Key

   Client Hints may be combined with Key to enable fine-grained control
   of the cache key for improved cache efficiency.  For example, the
   server may return the following set of instructions:

     Key: CH;pr=dw[320:640]

   Above example indicates that the cache key should be based on the CH
   header, and the asset should be cached and made available for any
   client whose device width falls between 320 and 640 px.

     Key: CH;pr=dpr[1.5:]

   Above examples indicates that the cache key should be based on the CH
   header, and the asset should be cached and made available for any
   client whose device pixel ratio is 1.5, or higher.

2.5.  Interaction with HTTP proxies

   In absence of support for fine-grained control of the cache key via
   the Key header field, Vary response header can be used to indicate
   that served resource has been adapted based on specified Client Hint
   preferences.




Grigorik                 Expires August 19, 2013                [Page 5]

Internet-Draft              HTTP Client Hints              February 2013


2.6.  Interaction with User Agent

   Client Hints does not supersede or replace User-Agent.  Existing
   device detection mechanisms can continue to use both mechanisms if
   necessary.  By advertising its capabilities within a request header,
   Client Hints allows for cache friendly and explicit content
   adaptation.


3.  IANA Considerations

   TBD


4.  Security Considerations

   The client controls which header fields are communicated and when.
   In cases such as incognito or anonymous profile browsing, the header
   can be omitted if necessary.


5.  Normative References

   [I-D.ietf-httpbis-p1-messaging]
              Fielding, R. and J. Reschke, "Hypertext Transfer Protocol
              (HTTP/1.1): Message Syntax and Routing",
              draft-ietf-httpbis-p1-messaging-21 (work in progress),
              October 2012.

   [I-D.ietf-httpbis-p2-semantics]
              Fielding, R. and J. Reschke, "Hypertext Transfer Protocol
              (HTTP/1.1): Semantics and Content",
              draft-ietf-httpbis-p2-semantics-21 (work in progress),
              October 2012.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC5234]  Crocker, D. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234, January 2008.











Grigorik                 Expires August 19, 2013                [Page 6]

Internet-Draft              HTTP Client Hints              February 2013


Author's Address

   Ilya Grigorik

   Email: ilya@igvita.com
   URI:   http://www.igvita.com/













































Grigorik                 Expires August 19, 2013                [Page 7]

